version: '3.8'

services:
  # Mistral.rs Inference Server
  mistral:
    build:
      context: ./docker
      dockerfile: Dockerfile
    image: frontier-mistral:latest
    container_name: frontier-mistral
    restart: unless-stopped
    ports:
      - "${MISTRAL_API_PORT:-8080}:8080"
    volumes:
      - mistral-models:/models
      - ./config/mistral:/config
    environment:
      - RUST_LOG=${MISTRAL_LOG_LEVEL:-info}
      - MISTRAL_MODEL_PATH=/models
      - MISTRAL_PORT=${MISTRAL_API_PORT:-8080}
      - MISTRAL_HOST=0.0.0.0
      - MISTRAL_MAX_BATCH_SIZE=${MISTRAL_MAX_BATCH_SIZE:-8}
    command: >
      --port ${MISTRAL_API_PORT:-8080}
      --model-path /models
      --host 0.0.0.0
    deploy:
      resources:
        limits:
          memory: ${MISTRAL_MEMORY_LIMIT:-64G}
        reservations:
          memory: ${MISTRAL_MEMORY_RESERVATION:-32G}
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${MISTRAL_API_PORT:-8080}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - frontier-llm-network
      - frontier-monitoring
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  mistral-models:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${MISTRAL_MODELS_PATH:-./data/mistral-models}

networks:
  frontier-llm-network:
    external: true
  frontier-monitoring:
    external: true