# Mistral.rs with Ollama API compatibility layer
upstream mistral_backend {
    server mistral:8080;
}

upstream ollama_proxy_backend {
    server mistral-ollama-proxy:11434;
}

# Map Ollama API paths to the compatibility proxy
map $request_uri $backend {
    ~^/api/generate     ollama_proxy_backend;
    ~^/api/chat         ollama_proxy_backend;
    ~^/api/tags         ollama_proxy_backend;
    ~^/api/models       ollama_proxy_backend;
    ~^/api/version      ollama_proxy_backend;
    ~^/api/             ollama_proxy_backend;
    default             mistral_backend;
}

server {
    listen 80;
    server_name _;

    # Client body size for model uploads
    client_max_body_size 20G;
    
    # Timeouts for long-running requests
    proxy_read_timeout 300s;
    proxy_connect_timeout 30s;
    proxy_send_timeout 300s;
    
    # Buffer settings
    proxy_buffering off;
    proxy_request_buffering off;
    
    # WebSocket support for streaming
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    
    # Headers
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Route to appropriate backend based on path
    location / {
        proxy_pass http://$backend;
    }

    # Direct Mistral.rs API access (OpenAI-compatible)
    location /v1/ {
        proxy_pass http://mistral_backend;
    }

    # Health check endpoints
    location /health {
        proxy_pass http://mistral_backend/health;
    }

    location /api/health {
        proxy_pass http://ollama_proxy_backend/;
    }
}